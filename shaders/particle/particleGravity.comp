#version 450
#extension GL_ARB_separate_shader_objects : enable

#include "include/inputs.incl"

#define GRAVITY_CTE 0.000000000674f
#define GRAVITY_MASS 1000000000000000000000000.0f // 10e24

vec3 computeAcceleration(vec3 particlePos)
{
    float dist = abs(distance(particlePos, ubo.genCenter) + 6400000.0f);
    vec3 vecDist = normalize(ubo.genCenter - particlePos);
    return ((GRAVITY_CTE * ubo.particleMass * GRAVITY_MASS) * inversesqrt(pow(dist, 4)) * vecDist);
}

void main()
{
    uint i = gl_GlobalInvocationID.x;
    if (i >= ubo.particleCount) {
        return;
    }

    particles[i].acc = computeAcceleration(particles[i].pos);
    particles[i].pos += ubo.deltaT * (particles[i].vel + (ubo.deltaT * particles[i].acc));
    vec3 newAcc = computeAcceleration(particles[i].pos);
    particles[i].vel += ubo.deltaT * ((particles[i].acc + newAcc) * 0.5f);
    particles[i].vel = min(particles[i].vel, ubo.maxSpeed);
    particles[i].vel = max(particles[i].vel, -ubo.maxSpeed);
}